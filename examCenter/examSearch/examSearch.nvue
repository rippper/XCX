<template>
	<view class="examSearch">
		<view class="es_searchpart">
			<u-search placeholder="请输入课程名称" v-model="Keyword" :clearabled="true" @search="searchExam" @custom="searchExam"></u-search>
		</view>
		<search-history :class="{ 'history_disappear': searched }" :historyList="examHistory" @makeSelect="searchExam" @delete="deleteHistory"></search-history>
		<scroll-view class="es_courseresult" scroll-y :class="{ 'examresult_disappear': !searched, 'cr_noDataBg': noDataBg }" @scrolltolower="GetExamList">
			<exam-item v-for="(item, index) in examList" :key="index" :itemInfo="item"></exam-item>
			<u-loadmore :class="{ 'es_noData': noDataBg }" :status="status"/>
		</scroll-view>
		<u-toast ref="uToast" />
	</view>
</template>

<script>
import searchHistory from '../../components/searchHistory/searchHistory.nvue'
import examItem from '../../components/examItem/examItem.nvue'
import { GetExamList } from '../../common/getData.js'

export default {
	name: 'examSearch',
	data () {
		return {
			Keyword: '',
			examHistory: '',
			examList: [],
			Page: 1,
			Rows: 10,
			totalCount: 0,
			noDataBg: false,
			searched: false, //课程列表和历史纪录界面切换
			inTheEnd: false, // 是否到达底部
			status: 'loading',
			loadText: {
				loading: '加载中',
				nomore: '没有更多的内容了'
			}
			
		}
	},
	onShow () {
		this.getHistory()
	},
	methods: {
		searchExam (value) {
			if (value == '') {
				this.$refs.uToast.show({
					title: '请输入课程名称',
					type: 'warning',
					icon: false,
					position: 'bottom'
				})
				return false
			}
			this.Page = 1
			this.status = 'loading'
			this.noDataBg = false
			this.inTheEnd = false
			this.totalCount = 0
			this.examList = []
			this.historyEdit(value)
		},
		historyEdit (value) {
			this.Keyword = value
			let num = ''
			let repeat = this.examHistory.some((item, index) => {
				if (item == value) {
					num = index
					return true
				}
			})
			if (repeat) {
				this.examHistory.splice(num, 1)
				this.examHistory.unshift(value)
				uni.setStorageSync('examHistory', this.examHistory)
				this.GetExamList()
				return false
			}
			if (this.examHistory.length > 12) {
				this.examHistory.pop()
				this.examHistory.unshift(value)
				uni.setStorageSync('examHistory', this.examHistory)
			} else {
				this.examHistory.unshift(value)
				uni.setStorageSync('examHistory', this.examHistory)
			}
			this.GetExamList()
		},
		getHistory () {
			let arr = uni.getStorageSync('examHistory')
			Array.isArray(arr) ? this.examHistory = arr : this.examHistory = []
		},
		deleteHistory () {
			this.examHistory = []
			uni.removeStorageSync('examHistory')
		},
		async GetExamList () {
			console.log(11)
			if (this.inTheEnd) {
				return false
			}
			let msg = await GetExamList({
				Keyword: this.Keyword,
				Page: this.Page,
				Rows: this.Rows
			})
			if (msg.Type === 1) {
				this.searched = true
				this.totalCount = msg.Data.TotalCount
				if (msg.Data.List.length == 0 && this.Page == 1) {
					this.noDataBg = true
					return
				}
				msg.Data.List.map(item => {
					if (item.Status == 'UnFinish') {
						item.passType = '不合格'
					} else if (item.Status == 'UnJoin') {
						item.passType = '未考'
					} else if (item.Status == 'Finish') {
						item.passType = '合格'
					}
				})
				this.examList = [...this.examList, ...msg.Data.List]
				if (this.examList.length == this.totalCount) {
					this.status = 'nomore'
					this.inTheEnd = true
				}
				this.Page += 1
			}
			console.log(msg)
		}
	},
	components: {
		searchHistory,
		examItem
	}
}
</script>

<style lang="scss">
@import '../../style/mixin.scss';
.examSearch{
	height: 100vh;
	.es_searchpart{
		width: 100%;
		padding: 20rpx;
		background: #fff;
		position: fixed;
		top: 0;
		left: 0;
		z-index: 99;
	}
	.searchHistory{
		margin-top: 120rpx;
	}
	.u-search{
		flex-direction: row;
	}
	.u-content{
		flex-direction: row;
	}
	.es_courseresult{
		height: 100%;
		padding-top: 104rpx;
		background: #fff;
		.es_noData{
			display: none;
		}
		.u-load-more-wrap{
			display: flex;
			flex-direction: row;
			justify-content: space-around;
		}
		.u-load-more-inner{
			flex-direction: row;
			align-items: center;
			height: 80rpx;
		}
	}
	.history_disappear{
		display: none;
	}
	.examresult_disappear{
		display: none;
	}
	.cr_noDataBg{
		@include setBackground('no_data.png');
		background-size: 254rpx 402rpx;
		background-position: center center;
	}
}
</style>
