<template>
	<view class="setPassword">
		<view class="sp_line">
			<view class="sp_line_label">老密码:</view>
			<view class="sp_line_input">
				<input type="password" v-model="oldPassword">
			</view>
		</view>
		<view class="sp_line">
			<view class="sp_line_label">新密码:</view>
			<view class="sp_line_input">
				<input type="password" v-model="newPassword">
			</view>
		</view>
		<view class="sp_line">
			<view class="sp_line_label">确认密码:</view>
			<view class="sp_line_input">
				<input type="password" v-model="againPassword" @blur="checkAgain">
			</view>
			<view class="sp_warning" :class="{ 'sp_warning_show': againCheck }">确认密码不正确</view>
		</view>
		<view class="sp_btn">
			<view @click="SetUserPassword">保存</view>
		</view>
		<u-modal v-model="modelShow" :content="Content" @confirm="goBack"></u-modal>
		<u-toast ref="uToast"/>
	</view>
</template>

<script>
import { SetUserPassword } from '../../common/getData.js';
export default {
	name: 'setPassword',
	data () {
		return {
			oldPassword: '',
			newPassword: '',
			againPassword: '',
			againCheck: false,
			modelShow: false,
			Content: ''
		}
	},
	methods: {
		goBack () {
			uni.navigateBack()
		},
		checkAgain () {
			this.newPassword != this.againPassword ? this.againCheck = true : this.againCheck = false
		},
		async SetUserPassword () {
			this.checkAgain()
			if (this.againCheck) {
				return false
			}
			let msg = await SetUserPassword({
				OldPassword: this.oldPassword,
				Password: this.againPassword
			})
			if (msg.Type == 1) {
				this.Content = msg.Message
				this.modelShow = true
			} else {
				this.$refs.uToast.show({
					title: msg.Message,
					type: 'error'
				})
			}
		}
	}
}
</script>

<style lang="scss">
@import '../../style/mixin.scss';
.setPassword{
	width: 100%;
	height: 100vh;
	.sp_line{
		height: 100rpx;
		padding: 0 30rpx;
		margin-top: 20rpx;
		display: flex;
		flex-direction: row;
		align-items: center;
		background: #fff;
		.sp_line_label{
			width: 20%;
			font-size: 32rpx;
			text-align: right;
		}
		.sp_line_input{
			width: 50%;
			font-size: 32rpx;
			input{
				padding-left: 30rpx;
			}
		}
		.sp_warning{
			font-size: 32rpx;
			color: #f00;
			transform: translate(400rpx, 0);
			transition: 0.5s;
		}
		.sp_warning_show{
			transform: translate(0, 0);
		}
	}
	.sp_btn{
		width: 700rpx;
		height: 100rpx;
		line-height: 100rpx;
		margin: 40rpx auto 0;
		border-radius: 15rpx;
		text-align: center;
		background: $brand-primary;
		color: #fff;
	}
}
</style>
